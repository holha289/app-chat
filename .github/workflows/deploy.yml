name: Android & iOS CI/CD with Firebase (Cache npm)

on:
  push:
    branches: [ main ]

jobs:
  android:
    name: Build Android & Distribute
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            $HOME/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Prebuild Android
        run: npx expo prebuild

      - name: Build release APK
        run: |
          cd android
          ./gradlew assembleRelease

      - name: Authenticate with Firebase
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > $HOME/firebase.json
          export GOOGLE_APPLICATION_CREDENTIALS="$HOME/firebase.json"

      - name: Distribute Android to Firebase
        run: |
          npm install -g firebase-tools
          firebase appdistribution:distribute android/app/build/outputs/apk/release/app-release.apk \
            --app ${{ secrets.FIREBASE_ANDROID_APP_ID }} \
            --release-notes "Android build tá»« GitHub Actions ðŸš€" \
            --groups "internal-testers"

  ios:
    name: Build iOS & Distribute
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            $HOME/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Run EAS Build (iOS)
        run: eas build --platform ios --profile preview --non-interactive --output=AppChat.ipa
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Authenticate with Firebase
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > $HOME/firebase.json
          export GOOGLE_APPLICATION_CREDENTIALS="$HOME/firebase.json"

      - name: Distribute iOS to Firebase
        run: |
          npm install -g firebase-tools
          firebase appdistribution:distribute AppChat.ipa \
            --app ${{ secrets.FIREBASE_IOS_APP_ID }} \
            --release-notes "iOS build tá»« GitHub Actions ðŸš€" \
            --groups "internal-testers"
