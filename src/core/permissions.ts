import notifee, { AuthorizationStatus } from '@notifee/react-native';
import {
  check,
  request,
  PERMISSIONS,
  RESULTS,
  openSettings,
} from 'react-native-permissions';
import { Platform } from 'react-native';

const requestPermission = async () => {
  let notificationGranted = false;
  let locationGranted = false;

  // üîî 1. Quy·ªÅn th√¥ng b√°o
  try {
    const settings = await notifee.requestPermission();

    if (settings.authorizationStatus === AuthorizationStatus.AUTHORIZED) {
      console.log('‚úÖ ƒê√£ c·∫•p quy·ªÅn th√¥ng b√°o');
      notificationGranted = true;
    } else {
      console.log('‚ùå Ch∆∞a ƒë∆∞·ª£c c·∫•p quy·ªÅn th√¥ng b√°o');
    }
  } catch (e) {
    console.log('‚ö†Ô∏è L·ªói xin quy·ªÅn th√¥ng b√°o:', e);
  }

  // üìç 2. Quy·ªÅn v·ªã tr√≠
  // try {
  //   const locationPermission =
  //     Platform.OS === 'ios'
  //       ? PERMISSIONS.IOS.LOCATION_WHEN_IN_USE
  //       : PERMISSIONS.ANDROID.ACCESS_FINE_LOCATION;

  //   const locationStatus = await check(locationPermission);

  //   if (locationStatus === RESULTS.GRANTED) {
  //     console.log('‚úÖ ƒê√£ c√≥ quy·ªÅn v·ªã tr√≠');
  //     locationGranted = true;
  //   } else {
  //     const result = await request(locationPermission);

  //     if (result === RESULTS.GRANTED) {
  //       console.log('‚úÖ Quy·ªÅn v·ªã tr√≠ ƒë∆∞·ª£c c·∫•p sau khi y√™u c·∫ßu');
  //       locationGranted = true;
  //     } else if (result === RESULTS.BLOCKED) {
  //       console.log('‚ùå Quy·ªÅn v·ªã tr√≠ b·ªã ch·∫∑n ho√†n to√†n, c·∫ßn m·ªü C√†i ƒë·∫∑t');
  //       openSettings(); // M·ªü settings n·∫øu c·∫ßn
  //     } else {
  //       console.log('‚ùå Ng∆∞·ªùi d√πng t·ª´ ch·ªëi quy·ªÅn v·ªã tr√≠');
  //     }
  //   }
  // } catch (e) {
  //   console.log('‚ö†Ô∏è L·ªói xin quy·ªÅn v·ªã tr√≠:', e);
  // }

  return {
    notification: notificationGranted,
    location: locationGranted,
  };
};

export { requestPermission };
